#
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
#

name: Release workflow

on:
  release:
    types: [published, edited]

jobs:
  initialize-matrix:
    runs-on: ubuntu-latest
    name: Setting up build matrix
    outputs:
      deployment-matrix: ${{ steps.export-deployment-matrix.outputs.deployment-matrix }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get matrix data
        id: export-deployment-matrix
        run: |
          MATRIX=$(cat ./package.json | tr '\n' ' ')

          echo "deployment-matrix=$MATRIX" >> $GITHUB_OUTPUT

  release-documentation:
    name: Generate release documentation
    runs-on: ubuntu-latest
    needs: initialize-matrix
    strategy:
      matrix:
        component: ${{ fromJson(needs.initialize-matrix.outputs.deployment-matrix) }}
    env:
      TEST_RESULT_FOLDER_NAME: test-results
    steps:
      - uses: actions/checkout@v3

      - name: Clone Release Documentation Action repository
        uses: actions/checkout@v3
        with:
          repository: eclipse-velocitas/release-documentation-action
          path: "./.github/actions"

      - uses: actions/setup-node@v3
        with:
          node-version: "18"
          check-latest: true

      - name: Conditional input event value
        uses: haya14busa/action-cond@v1
        id: condval
        with:
          cond: ${{ !github.event.inputs.name }}
          if_true: ${{ github.event.inputs.name }}
          if_false: ${{ github.sha }}

      - name: Download artifact from CI workflow
        uses: dawidd6/action-download-artifact@v2
        with:
          workflow: ci.yaml
          workflow_conclusion: success
          commit: ${{ steps.condval.outputs.value }}
          path: .ladExtension/Documentation/Inbox

      - name: Render documentation (test-results)
        uses: ./.github/actions/render
        with:
          inboxPath: .ladExtension/Documentation/Inbox/test-results
          outboxPath: .ladExtension/Documentation/Outbox
          templatePath: ./.github/actions/templates

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: "0.89.4"
          extended: true

      - name: Set tags output
        id: vars
        run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

      - name: Check output
        env:
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
        run: |
          echo $RELEASE_VERSION
          echo ${{ steps.vars.outputs.tag }}

      - name: Create and Add reports to hugo static html site
        run: |
          hugo new site hugo

          cp ./README.md ./hugo/content/_index.md

          mkdir ./hugo/content/documentation
          mkdir ./hugo/content/reports

          cp ./README.md ./hugo/content/documentation/_index.md
          sed -i '1d' hugo/content/documentation/_index.md
          sed -i '1s/^/---\ntitle: "VSCode extension using typescript"\ndraft: false\n---\n/' hugo/content/documentation/_index.md

          cp .ladExtension/Documentation/Outbox/* ./hugo/content/reports

          cat hugo/content/reports/VulnerabilityScan-*.md >  hugo/content/reports/vulnerability-scan-results.md
          sed -i '1s/^/---\ntitle: "Vulnerability Scan Results"\ndraft: false\n---\n/'  hugo/content/reports/vulnerability-scan-results.md
          rm hugo/content/reports/VulnerabilityScan-*.md

          mkdir ./hugo/config
          mkdir ./hugo/config/_default
          mkdir ./hugo/config/pages

          echo $'languageCode = "en-us"\ntitle = "Release Documentation - @tag"\n\nbaseURL = "http://example.org/"\n\n# Keep uglyURLs for now, as this provides the best out of the box support for rendering markdown images in VSCode preview and Hugo\n# Link: https://gohugo.io/content-management/urls/#ugly-urls\nuglyURLs = "true"\n\nenableGitInfo = true\n\ntheme = "hugo-geekdoc"\n\n# Geekdoc required configuration\npygmentsUseClasses = true\npygmentsCodeFences = true\ndisablePathToLower = true\n\n[markup]\ndefaultMarkdownHandler = "goldmark"\n\n[markup.goldmark.renderer]\nunsafe = true\n\n[markup.tableOfContents]\n    ordered= false\n    startLevel= 1\n    endLevel= 3\n\n[params]\ngeekdocRepo = "https://github.com/software-engineering-project-org/vscode-plugin-automotive-app-deployment"\ngeekdocEditPath = "edit/main/hugo/content"\ngeekdocCollapseSection = true\n' > ./hugo/config/_default/config.toml
          echo $'# Hugo-Geekdoc Theme Config\n\nbaseURL = "https://fantastic-fiesta-da4ab8e5.pages.github.io/"\n\ntheme = "hugo-geekdoc"\n\nenableGitInfo = false\n\npluralizeListTitles = false\npygmentsUseClasses = true\n\n[markup]\n  defaultMarkdownHandler = "goldmark"\n\n[markup.highlight]\n    anchorLineNos = false\n    codeFences = true\n    guessSyntax = false\n    hl_Lines = ""\n    lineAnchors = ""\n    lineNoStart = 1\n    lineNos = true\n    lineNumbersInTable = true\n    noClasses = false\n    style = "paraiso-dark"\n    tabWidth = 4\n\n[markup.tableOfContents]\n    endLevel = 3\n    ordered = false\n    startLevel = 1\n\n[markup.goldmark.extensions]\n    typographer = true\n\n[markup.goldmark.renderer]\n    unsafe = true\n\n# Disable geekdoc default theme settings\n[params]\ngeekdocRepo = ""\ngeekdocEditPath = ""\n# disable non-working search when serving from local file system\ngeekdocSearch = false\n' > ./hugo/config/pages/config.toml

          mkdir hugo/data/menu
          echo "---" > ./hugo/data/menu/extra.yaml
          printf "header:\n  - name: GitHub\n    ref: https://github.com/software-engineering-project-org/vscode-plugin-automotive-app-deployment\n    icon: gdoc_github\n    external: true\n" >> ./hugo/data/menu/extra.yaml

          echo "---" > ./hugo/data/menu/more.yaml
          printf 'more:\n  - name: Releases\n    ref: "https://github.com/software-engineering-project-org/vscode-plugin-automotive-app-deployment/releases"\n    external: true\n    icon: "gdoc_download"\n  - name: "View Source"\n    ref: "https://github.com/software-engineering-project-org/vscode-plugin-automotive-app-deployment/tree/@tag"\n    external: true\n    icon: "gdoc_github"\n' >> ./hugo/data/menu/more.yaml

          sed -i -e 's/@tag/${{ steps.vars.outputs.tag }}/g' ./hugo/config/_default/config.toml
          sed -i -e 's/@tag/${{ steps.vars.outputs.tag }}/g' ./hugo/data/menu/more.yaml

      - name: Build
        working-directory: ${{github.workspace}}/hugo
        env:
          GEEKDOC_THEME_VERSION: 0.21.1
        # hugo --minify not fully supported by hugo-geekdoc theme
        run: |
          echo "Download theme hugo-geekdoc v${GEEKDOC_THEME_VERSION}"
          mkdir -p themes/hugo-geekdoc/
          curl -L https://github.com/thegeeklab/hugo-geekdoc/releases/download/v${GEEKDOC_THEME_VERSION}/hugo-geekdoc.tar.gz | tar -xz -C themes/hugo-geekdoc/ --strip-components=1
          echo "Build release documentation for GitHub Pages"
          hugo -d ./public --environment=pages

      - name: zip
        run: |
          zip -r .ladExtension/Documentation/release-documentation.zip ${{github.workspace}}/hugo/public

      - name: Upload assets
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            .ladExtension/Documentation/release-documentation.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#      - name: Publish to GH Pages
 #       uses: peaceiris/actions-gh-pages@v3
  #      with:
   #       github_token: ${{ secrets.GITHUB_TOKEN }}
    #      publish_dir: ${{github.workspace}}/hugo/public
     #     publish_branch: gh_pages